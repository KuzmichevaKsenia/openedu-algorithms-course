Язык Quack — забавный язык, который фигурирует в одной из задач с Internet Problem Solving Contest. В этой задаче вам требуется написать интерпретатор языка Quack.

Виртуальная машина, на которой исполняется программа на языке Quack, имеет внутри себя очередь, содержащую целые числа по модулю 65536 (то есть, числа от 0 до 65535, соответствующие беззнаковому 16-битному целому типу). Слово get в описании операций означает извлечение из очереди, put — добавление в очередь. Кроме того, у виртуальной машины есть 26 регистров, которые обозначаются буквами от 'a' до 'z'. Изначально все регистры хранят нулевое значение. В языке Quack существуют следующие команды (далее под a и b подразумеваются некие абстрактные временные переменные):

+	Сложение: get a, get b, put (a+b) mod 65536
-	Вычитание: get a, get b, put (a-b) mod 65536
*	Умножение: get a, get b, put (a*b) mod 65536
/	Целочисленное деление: get a, get b, put a div b (будем считать, что a div 0 = 0)
%	Взятие по модулю: get a, get b, put a mod b (будем считать, что a mod 0 = 0)
>[register]	Положить в регистр: get a, установить значение [register] в a
<[register]	Взять из регистра: put значение [register]
P	Напечатать: get a, вывести a в стандартный поток вывода и перевести строку
P[register]	Вывести значение регистра [register] в стандартный поток вывода и перевести строку
C	Вывести как символ: get a, вывести символ с ASCII-кодом a mod 256 в стандартный поток вывода
C[register]	Вывести регистр как символ: вывести символ с ASCII-кодом a mod 256 (где a — значение регистра [register]) в стандартный поток вывода
:[label]	Метка: эта строка программы имеет метку [label]
J[label]	Переход на строку с меткой [label]
Z[register][label]	Переход если 0: если значение регистра [register] равно нулю, выполнение программы продолжается с метки [label]
E[register1][register2][label]	Переход если равны: если значения регистров [register1] и [register2] равны, исполнение программы продолжается с метки [label]
G[register1][register2][label]	Переход если больше: если значение регистра [register1] больше, чем значение регистра [register2], исполнение программы продолжается с метки [label]
Q	Завершить работу программы. Работа также завершается, если выполнение доходит до конца программы
[number]
Просто число во входном файле — put это число

Формат входного файла
Входной файл содержит синтаксически корректную программу на языке Quack. Известно, что программа завершает работу не более чем за 10^5 шагов. Программа содержит не менее одной и не более 10^5 инструкций. Метки имеют длину от 1 до 10 и состоят из цифр и латинских букв.

Формат выходного файла
Выведите содержимое стандартного потока вывода виртуальной машины в выходной файл.

input.txt:
100
0
:start
>a
Zaend
<a
<a
1
+
-
>b
<b
Jstart
:end
P

output.txt:
5050

Второй пример подразумевает UNIX-переводы строки в ответе (один символ с кодом 10).

input.txt:
58
49
10
62
97
10
80
97
10
90
97
50
10
60
97
10
74
49
10
58
50
10
48
10
58
51
10
62
97
10
90
97
52
10
67
97
10
74
51
10
58
52
10
0
:1
>a
Pa
Za2
<a
J1
:2
0
:3
>a
Za4
Ca
J3
:4

output.txt:
58
49
10
62
97
10
80
97
10
90
97
50
10
60
97
10
74
49
10
58
50
10
48
10
58
51
10
62
97
10
90
97
52
10
67
97
10
74
51
10
58
52
10
0
:1
>a
Pa
Za2
<a
J1
:2
0
:3
>a
Za4
Ca
J3
:4